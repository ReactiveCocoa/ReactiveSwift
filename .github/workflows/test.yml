on: pull_request
name: Test
jobs:
  test:
    name: Test
    runs-on: macos-latest
    strategy:
        fail-fast: false
        matrix:
          destination:
            - clean test -scheme "ReactiveSwift-iOS" -destination "platform=iOS Simulator,name=iPhone 11 Pro"
            - clean test -scheme "ReactiveSwift-tvOS" -destination "platform=tvOS Simulator,name=Apple TV 4K"
            - clean build -scheme "ReactiveSwift-watchOS" -destination "platform=watchOS Simulator,name=Apple Watch Series 5 - 44mm"
            - clean test -scheme "ReactiveSwift-iOS" -destination "platform=macOS,variant=Mac Catalyst"
            - clean test -scheme "ReactiveSwift-macOS" -destination "platform=macOS,arch=x86_64"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Recover cached dependencies
        uses: actions/cache@v1
        id: dependency-cache
        with:
          path: Carthage/Checkouts
          key: carthage-${{ hashFiles('Cartfile.resolved') }}
      - name: Pull dependencies
        if: steps.dependency-cache.outputs.cache-hit != 'true'
        run: |
          carthage checkout
      - name: Test via xcodebuild
        run: |
          xcodebuild ${{ matrix.destination }} -workspace ReactiveSwift.xcworkspace CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=YES

  swiftpm-linux:
    name: SwiftPM Linux
    runs-on: ubuntu-18.04
    steps:
      - name: Install Swift
        run: |
          eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Recover cached dependencies
        uses: actions/cache@v1
        id: dependency-cache
        with:
          path: .build
          key: swiftpm-linux-${{ hashFiles('Package.resolved') }}
      - name: Pull dependencies
        if: steps.dependency-cache.outputs.cache-hit != 'true'
        run: |
          swift package resolve
      - name: Test via SwiftPM
        run: |
          swift --version
          swift build
          swift test

